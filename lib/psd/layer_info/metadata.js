// Generated by CoffeeScript 1.11.1
(function() {
  var Descriptor, LayerInfo, Metadata,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  LayerInfo = require('../layer_info');

  Descriptor = require('../descriptor');

  module.exports = Metadata = (function(superClass) {
    extend(Metadata, superClass);

    function Metadata() {
      return Metadata.__super__.constructor.apply(this, arguments);
    }

    Metadata.shouldParse = function(key) {
      return key === 'shmd';
    };

    Metadata.prototype.parse = function() {
      var copyOnSheetDup, count, end, i, j, key, len, ref, results;
      count = this.file.readInt();
      results = [];
      for (i = j = 0, ref = count; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        this.file.seek(4, true);
        key = this.file.readString(4);
        copyOnSheetDup = this.file.readByte();
        this.file.seek(3, true);
        len = this.file.readInt();
        end = this.file.tell() + len;
        if (key === 'cmls') {
          this.parseLayerComps();
        }
        results.push(this.file.seek(end));
      }
      return results;
    };

    Metadata.prototype.parseLayerComps = function() {
      this.file.seek(4, true);
      return this.data.layerComp = new Descriptor(this.file).parse();
    };

    return Metadata;

  })(LayerInfo);

}).call(this);
